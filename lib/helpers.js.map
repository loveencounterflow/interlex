{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nmisfit                    = Symbol 'misfit'\n{ std\n  isa                   } = require 'cleartype'\n\n#===========================================================================================================\nclass Levelstack\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( P... ) ->\n    @data = P\n    hide_getter @, 'length',    => @data.length\n    hide_getter @, 'is_empty',  => @data.length is 0\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  clear: ->\n    @data.length = 0\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  push: ( d ) ->\n    @data.push d\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  pop: ( fallback = misfit ) ->\n    if @is_empty\n      return fallback unless fallback is misfit\n      throw new Error \"Ωilx___1 stack is empty\"\n    return @data.pop()\n\n  #---------------------------------------------------------------------------------------------------------\n  peek: ( fallback = misfit ) ->\n    if @is_empty\n      return fallback unless fallback is misfit\n      throw new Error \"Ωilx___2 stack is empty\"\n    return @data.at -1\n\n  #---------------------------------------------------------------------------------------------------------\n  popnpeek: ( fallback = misfit ) ->\n    if @is_empty\n      return fallback unless fallback is misfit\n      throw new Error \"Ωilx___3 stack is empty\"\n    @pop()\n    return @data.at -1\n\n  #---------------------------------------------------------------------------------------------------------\n  pop_name: ( fallback = misfit ) ->\n    if @is_empty\n      return fallback unless fallback is misfit\n      throw new Error \"Ωilx___4 stack is empty\"\n    return @pop().name\n\n\n# #===========================================================================================================\n# @bind_proto = ( that, f ) -> that::[ f.name ] = f.bind that::\n\n#===========================================================================================================\nhide = ( object, name, value ) => Object.defineProperty object, name,\n    enumerable:   false\n    writable:     true\n    configurable: true\n    value:        value\n\n#===========================================================================================================\nhide_getter = ( object, name, getter ) => Object.defineProperty object, name,\n    enumerable:   false\n    configurable: true\n    get:          getter\n\n#===========================================================================================================\nset_getter = ( object, name, getter ) => Object.defineProperty object, name,\n    enumerable:   true\n    configurable: true\n    get:          getter\n\n#===========================================================================================================\nclone = ( x ) ->\n  ### thx to https://chatgpt.com/c/68146386-600c-8005-9833-1319bd47c100 ###\n  # return Object.assign ( Object.create Object.getPrototypeOf x ), x\n  ### improved version ###\n  R = Object.create Object.getPrototypeOf x\n  Object.defineProperties R, Object.getOwnPropertyDescriptors x\n  return R\n\n#===========================================================================================================\ninsert_position_marker = ( text, idx, width = 50, marker = '⚠' ) ->\n  return text[ idx - width / 2 ... idx ] + marker + text[ idx .. idx + width / 2  ]\n\n#-----------------------------------------------------------------------------------------------------------\nquote_source = ( text, idx, width = 50, marker = '⚠' ) ->\n  return \"(indicated by #{rpr marker}: #{rpr insert_position_marker text, idx, width, marker})\"\n\n#===========================================================================================================\n# create_pod_from_template = ( ctx, template ) ->\n#   # ctx       = validate_optional std.pod, ctx\n#   template  = validate std.pod, template\n#   R = Object.create null\n#   if template?\n#     for key, { value, } of Object.getOwnPropertyDescriptors template\n#       value     = value.call ctx if isa std.function, value\n#       R[ key ]  = value\n#   return R\n\n#===========================================================================================================\nget_instance_methods = ( instance ) ->\n  R             = {}\n  for key, { value: method, } of Object.getOwnPropertyDescriptors instance\n    continue if key is 'constructor'\n    continue unless std.function.$isa method\n    R[ key ] = method\n  return R\n\n#===========================================================================================================\nbind_instance_methods = ( instance ) ->\n  for key, method of get_instance_methods Object.getPrototypeOf instance\n    hide instance, key, method.bind instance\n  return null\n\n#===========================================================================================================\ndebug   = console.debug\ninfo    = console.info\nrpr     = ( x ) -> ( require 'loupe' ).inspect x\n\n#===========================================================================================================\nmodule.exports = {\n  Levelstack\n  hide\n  hide_getter\n  set_getter\n  clone\n  insert_position_marker\n  quote_source\n  # create_pod_from_template\n  get_instance_methods\n  bind_instance_methods\n  debug\n  info\n  rpr }\n"
  ]
}