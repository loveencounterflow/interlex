{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA;;;;;;EAMA,IAAA,GAAO,CAAE,MAAF,EAAU,IAAV,EAAgB,KAAhB,CAAA,GAAA;WAA2B,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,IAA9B,EAC9B;MAAA,UAAA,EAAc,KAAd;MACA,QAAA,EAAc,IADd;MAEA,YAAA,EAAc,IAFd;MAGA,KAAA,EAAc;IAHd,CAD8B;EAA3B,EANP;;;;;;;;;;;;;;;;;;;EA8BA,KAAA,GAAU,OAAO,CAAC;;EAClB,IAAA,GAAU,OAAO,CAAC;;EAClB,GAAA,GAAU,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,OAAA,CAAQ,OAAR,CAAF,CAAmB,CAAC,OAApB,CAA4B,CAA5B;EAAT,EAhCV;;;;;EAmCA,MAAM,CAAC,OAAP,GAAiB,CACf,IADe,EAIf,KAJe,EAKf,IALe,EAMf,GANe;AAnCjB",
  "sourcesContent": [
    "\n'use strict'\n\n# #===========================================================================================================\n# @bind_proto = ( that, f ) -> that::[ f.name ] = f.bind that::\n\n#===========================================================================================================\nhide = ( object, name, value ) => Object.defineProperty object, name,\n    enumerable:   false\n    writable:     true\n    configurable: true\n    value:        value\n\n# #===========================================================================================================\n# get_instance_methods = ( instance ) ->\n#   isa_function  = ( require './builtins' ).std.function.$isa\n#   R             = {}\n#   for key, { value: method, } of Object.getOwnPropertyDescriptors instance\n#     continue if key is 'constructor'\n#     continue unless isa_function method\n#     R[ key ] = method\n#   return R\n\n# #===========================================================================================================\n# bind_instance_methods = ( instance ) ->\n#   for key, method of get_instance_methods Object.getPrototypeOf instance\n#     hide instance, key, method.bind instance\n#   return null\n\n\n#===========================================================================================================\ndebug   = console.debug\ninfo    = console.info\nrpr     = ( x ) -> ( require 'loupe' ).inspect x\n\n#===========================================================================================================\nmodule.exports = {\n  hide\n  # get_instance_methods\n  # bind_instance_methods\n  debug\n  info\n  rpr }\n"
  ]
}